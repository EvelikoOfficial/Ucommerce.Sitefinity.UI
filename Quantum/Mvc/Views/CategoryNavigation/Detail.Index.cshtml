@model CategoryNavigationViewModel

@using Newtonsoft.Json;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Web;
@using UCommerce.Sitefinity.UI.Mvc.Model;
@using UCommerce.Sitefinity.UI.Mvc.ViewModels;

@Html.StyleSheet(Url.WidgetContent("assets/src/css/uc-vue-styles.css"), "head")
@Html.StyleSheet(Url.WidgetContent("assets/dist/css/main.min.css"), "head")
@Html.StyleSheet(Url.WidgetContent("assets/src/css/b4-category-navigation.css"), "head")

@if (!SystemManager.IsDesignMode)
{
    @Html.Script(Url.WidgetContent("assets/build/js/vendor.bundle.js"), "bottom", false)
    @Html.Script(Url.WidgetContent("assets/build/js/main.js"), "bottom", false)
}

<div data-component="category-navigation" id="@Html.UniqueId("categories")" v-cloak>
    <input type="hidden" value="@Model.Localizations"/>
    <script type="application/json" data-items="true">
        { "items" : @Html.Raw(JsonConvert.SerializeObject(Model.Categories)) }
    </script>
    <nav class="bg-white shadow-lg mb-0">
        @if (false && !string.IsNullOrWhiteSpace(Model.ImageUrl))
        {
            <a href="/" class="navbar-brand" alt="">
                <img src="@Model.ImageUrl" class="d-inline-block align-top" alt="Category Navigation Logo" width="30" height="30" />
            </a>
        }
        @if (Model.AllowChangingCurrency && Model.Currencies.Count > 0)
        {
            var currencies = JsonConvert.SerializeObject(Model.Currencies);
            var currentCurrency = JsonConvert.SerializeObject(Model.CurrentCurrency);
            <currency-selector :serialized-currencies="'@currencies'" :serialized-current-currency="'@currentCurrency'" :root-id="$el.id"></currency-selector>
        }
        <search :search-page-url="'@UrlPath.ResolveAbsoluteUrl(Model.SearchPageUrl)'" :product-details-page-id="'@Model.ProductDetailsPageId'" :root-id="$el.id" ref="search">
        </search>
        @if (Model.Categories.Count > 0)
        {
            <h3 class="sffilterTitle">Filter By Category@* Html.Resource("FilterByCategory", "UcommerceResources") *@</h3>
            <dropdown-menu :nodes="items"></dropdown-menu>
        }
    </nav>
    @foreach (var route in Model.Routes)
    {
        <input type="hidden" class="@route.Key" value="@route.Value" />
    }
</div>

<script type="text/x-template" id="dropdown-menu-template">
    <ul class="sfShopByFilterCategoryList">
        <li v-for="node in nodes"
            v-bind:key="node.DisplayName"
            class="sfShopByFilterCategoryListItem"
            v-bind:class="{'dropdown mr-4': node.Categories.length > 0}">
            <a v-if="node.Categories.length > 0"
               :href="node.Url"
               :id="node.DisplayName">
                {{node.DisplayName}}
                <span class="sr-only">(current)</span>
            </a>
            <a v-else
               :href="node.Url">
                {{node.DisplayName}}
                <span v-if="node.IsOpen" class="sr-only">(current)</span>
            </a>
            <button v-if="node.Categories.length > 0"
                    class="btn btn-outline-dark shadow-none dropdown-toggle position-absolute p-0 mt-2 float-left border-0"
                    v-on:click.stop.prevent="nodeClicked(node)"
                    style="width: 25px; height: auto;"></button>
            <dropdown-submenu :parent-node="node"></dropdown-submenu>
        </li>
    </ul>
</script>

<script type="text/x-template" id="dropdown-submenu-template">
    <ul class="dropdown-menu"
        v-bind:class="{'show': isParentOpen}"
        :aria-labelledby="parentNode.DisplayName">
        <li v-for="node in parentNode.Categories"
            v-bind:key="node.DisplayName"
            v-bind:class="{'dropdown dropright': node.Categories.length > 0, 'dropdown-item': node.Categories === 0 }"
            class="nav-item">
            <a v-if="node.Categories.length > 0"
               class="nav-link float-left ml-5"
               :href="node.Url"
               :id="node.DisplayName">
                {{node.DisplayName}}
                <span class="sr-only">(current)</span>
                <dropdown-submenu :parent-node="node"></dropdown-submenu>
            </a>
            <a v-else
               class="dropdown-item nav-link text-center"
               :href="node.Url"
               v-on:click.stop>
                {{node.DisplayName}}
                <span class="sr-only">(current)</span>
            </a>
            <button v-if="node.Categories.length > 0"
                    class="btn btn-outline-dark shadow-none dropdown-toggle position-absolute p-0 mt-2 float-left border-0"
                    v-on:click.stop.prevent="nodeClicked(node)"
                    style="width: 25px; height: auto;"></button>
        </li>
    </ul>
</script>

<script type="text/x-template" id="currency-selector-template">
<div class="dropdown sfShopByCurrencyPicker">
    <span class="nav-link float-left">
        @Html.Resource("SelectedCurrency", "UcommerceResources"):
    </span>
    <select :class="showCurrencies ? 'show' : ''" v-model="currentCurrency.PriceGroupId" v-on:change="setCurrency(currentCurrency.PriceGroupId)">
        <option v-bind:value="currentCurrency.PriceGroupId">{{currentCurrency.DisplayName}}</option>
        <option class="nav-item" v-for="currency in currencies" v-bind:value="currency.PriceGroupId">
            {{currency.DisplayName}}
        </option>
    </select>
</div>
</script>

<script type="text/x-template" id="search-template">
    <div class="bg-white shadow-lg p-3 rounded sfShopBySearchTemplate">
        <form v-if="searchPageUrl !== ''" v-bind:action="searchPageUrl" class="input-group" _lpchecked="1">
            <input type="text" autocomplete="off" v-model="searchQuery" focus v-on:input="search()" v-on:keyup.escape="closeSearch" required="" name="search" class="form-control" placeholder="Search for products">
            <span class="input-group-btn">
                <button class="btn btn-outline-secondary border-left-0 border" type="submit" v-on:click="search()">
                    <span>&#128269;</span>
                </button>
            </span>
        </form>

        <form v-if="searchPageUrl === ''" v-on:submit.prevent class="input-group" _lpchecked="1">
            <input type="text" autocomplete="off" v-model="searchQuery" autofocus v-on:input="search()" v-on:keyup.escape="closeSearch" required="" name="search" class="form-control" placeholder="Search for products">
            <span class="input-group-btn">
                <button class="btn btn-outline-secondary border-left-0 border" type="submit" v-on:click="search()">
                    <span>&#128269;</span>
                </button>
            </span>
        </form>

        <div>
            <ul class="list-group" v-show="searchResult.length !== 0 || suggestions.length !== 0">
                <li v-for="suggestion in suggestions" class="list-group-item" v-on:click="searchQuery = suggestion;search()">
                    <span class="img">
                    </span>
                    <span class="stext-info">
                        <span class="p-3 ng-binding">{{suggestion}}</span>
                    </span>
                </li>
                <li v-for="product in searchResult" class="list-group-item">
                    <a class="nav-link" v-bind:href="product.Url">
                        <span class="img">
                            <img height="50" width="50" v-bind:src="product.ThumbnailImageUrl" alt="">
                        </span>
                        <span class="text-info">
                            <span class="p-3">{{product.Name}}</span>
                        </span>
                    </a>
                </li>
            </ul>

            @* <a v-show="searchPageUrl !== ''" v-bind:href="searchPageHref()" class="btn btn-block">@Html.Resource("ShowAllResults", "UcommerceResources")</a> *@

        </div>
    </div>
</script>