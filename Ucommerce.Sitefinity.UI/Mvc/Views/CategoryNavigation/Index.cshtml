@model dynamic

@using Newtonsoft.Json;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Web;
@using Ucommerce.Sitefinity.UI.Mvc.Model;
@using Ucommerce.Sitefinity.UI.Mvc.ViewModels;

@Html.StyleSheet(Url.WidgetContent("assets/src/css/uc-vue-styles.css"), "head")

@if (!SystemManager.IsDesignMode)
{
    @Html.Script(Url.WidgetContent("assets/build/js/vendor.bundle.js"), "bottom", false)
    @Html.Script(Url.WidgetContent("assets/build/js/main.js"), "bottom", false)
}

@helper DisplayCategories(IList<CategoryNavigationCategoryViewModel> categories, bool topLevel)
{
    var categoryClass = "category-parent";
    if (!topLevel)
    {
        categoryClass = "category-child closed";
    }

    <ul class=" @categoryClass">
        @foreach (var category in categories)
        {
            var selected = category.IsActive ? "selected" : "";
            var categoryHref = category.Url;
            <li class="@selected">

                @if (category.Categories.Count > 0)
                {
                    categoryHref = "";
                }
                <a style="" href="@categoryHref">
                    @category.DisplayName
                    @if (topLevel && category.Categories.Count > 0)
                    {
                        <span>&#709;</span>
                    }
                    @if (!topLevel && category.Categories.Count > 0)
                    {
                        <span>&#707;</span>
                    }
                </a>

                @if (category.Categories.Count > 0)
                {
                    @DisplayCategories(category.Categories, false)
                }
            </li>
        }
    </ul>
}

<div data-component="category-navigation" id="@Html.UniqueId("categories")" v-cloak>
    <header ng-controller="categoryNavigationController">
        <div>
            <nav>
                <a href="/" alt="">
                    <img src="@Model.ImageUrl" alt="Category Navigation Logo">
                </a>

                @if (Model.Categories.Count > 0)
                {
                    @DisplayCategories(Model.Categories, true)
                }

                <ul>
                    @if (Model.AllowChangingCurrency && Model.Currencies.Count > 0)
                    {
                        var currencies = JsonConvert.SerializeObject(Model.Currencies);
                        var currentCurrency = JsonConvert.SerializeObject(Model.CurrentCurrency);
                        <currency-selector :serialized-currencies="'@currencies'" :serialized-current-currency="'@currentCurrency'" :root-id="$el.id" inline-template>
                            <li>
                                <a v-on:click="toggleCurrenciesVisibility">
                                    <span style="display: inline-block;">{{currentCurrency.DisplayName}}</span><span>&#709;</span>
                                </a>
                                <ul v-show="showCurrencies">
                                    <li v-for="currency in currencies">
                                        <a href="javascript:void(0)" v-on:click="setCurrency(currency.PriceGroupId)">
                                            <span>{{currency.DisplayName}}</span>
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        </currency-selector>
                    }

                    <li v-on:click="toggleSearchBar()"><a href="javascript:void(0)"><span>&#128269;</span></a></li>

                    @if (!Model.HideMiniBasket && !SystemManager.IsDesignMode)
                    {
                        <basket :root-id="$el.id" inline-template>
                            <li v-bind:class="basket && basket.orderLines && basket.orderLines.length > 0 ? 'active' : ''">
                                <a href="javascript:void(0)">
                                    <span>
                                        <span class="">{{basketLoaded ? basket.NumberOfItemsInBasket : ''}}</span>
                                        <span>&#128722;</span>
                                    </span>
                                </a>
                            </li>
                        </basket>
                    }
                </ul>
            </nav>
        </div>
        @foreach (var route in Model.Routes)
        {
            <input type="hidden" class="@route.Key" value="@route.Value" />
        }

        <search :search-page-url="'@UrlPath.ResolveAbsoluteUrl(Model.SearchPageUrl)'" :root-id="$el.id" ref="search" inline-template>

            <div v-show="showSearchBar">
                <div>
                    <button v-on:click="closeSearch"><span>&#215;</span></button>

                    <div>

                        <form v-if="searchPageUrl !== ''" v-bind:action="searchPageUrl" _lpchecked="1">
                            <span>&#128269;</span>
                            <input type="text" autocomplete="off" v-model="searchQuery" focus v-on:input="search()" v-on:keyup.escape="closeSearch" required="" name="search" placeholder="Search for products">
                        </form>

                        <form v-if="searchPageUrl === ''" v-on:submit.prevent _lpchecked="1">
                            <span>&#128269;</span>
                            <input type="text" autocomplete="off" v-model="searchQuery" autofocus v-on:input="search()" v-on:keyup.escape="closeSearch" required="" name="search" placeholder="Search for products">
                        </form>

                        <div>
                            <ul v-show="searchResult.length !== 0 || suggestions.length !== 0">
                                <li v-for="suggestion in suggestions" v-on:click="searchQuery = suggestion;search()">
                                    <span>
                                    </span>
                                    <span>
                                        <span>{{suggestion}}</span>
                                    </span>
                                </li>
                                <li v-for="product in searchResult">
                                    <a v-bind:href="product.Url">
                                        <span>
                                            <img v-bind:src="product.ThumbnailImageUrl" alt="">
                                        </span>
                                        <span>
                                            <span>{{product.Name}}</span>
                                        </span>
                                    </a>
                                </li>
                            </ul>

                            <a v-show="searchPageUrl !== ''" v-bind:href="searchPageHref()">Show all results</a>

                        </div>
                    </div>

                </div>
            </div>
        </search>
    </header>
</div>

<script>
    (function () {
        var categories = document.querySelectorAll('.category-parent > li');

        for (var i = 0; i < categories.length; i++) {
            categories[i].addEventListener('click', function () {

                var children = this.children;
                var otherChildren = document.querySelectorAll('.category-child');
                for (var i = 0; i < children.length; i++) {

                    if (children[i].classList.contains('closed')) {

                        for (var j = 0; j < otherChildren.length; j++) {

                            if (otherChildren[j].classList.contains('open')) {
                                otherChildren[j].classList.remove("open");
                                otherChildren[j].classList.add("closed");
                            }
                        }

                        this.children[i].classList.remove("closed");
                        this.children[i].classList.add("open");
                    } else if (children[i].classList.contains('open')) {

                        var otherChildren = document.querySelectorAll('.category-child');
                        for (var j = 0; j < otherChildren.length; j++) {

                            if (otherChildren[j].classList.contains('open')) {
                                otherChildren[j].classList.remove("open");
                                otherChildren[j].classList.add("closed");
                            }
                        }
                    }
                }
            }, false);
        }
    });
</script>
