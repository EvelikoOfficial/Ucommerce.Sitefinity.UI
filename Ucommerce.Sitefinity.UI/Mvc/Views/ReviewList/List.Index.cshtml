@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Services

@{
    Layout = null;
}

@Html.StyleSheet(Url.WidgetContent("assets/dist/css/checkout.css"), "head")
@Html.StyleSheet(Url.WidgetContent("assets/dist/css/products-review.css"), "head")

@if (!SystemManager.IsDesignMode)
{
    @Html.Script(Url.WidgetContent("assets/build/js/vendor.bundle.js"), "bottom", false)
    @Html.Script(Url.WidgetContent("assets/build/js/main.js"), "bottom", false)
}

<div data-component="review-list" id="review-list" class="review-list">
    <template v-if="Reviews">

        <div id="" class="sfcommentsThreadRatingWrp sfcommentsThreadRatingFull sfRatingReadOnly">
            <span class="sfRatingLabel">Average rating:</span>
            <show-rating :rating="averageRating"></show-rating>
            <span class="sfRatingAbsolute" itemprop="ratingValue">({{ displayRating }})</span><a class="sfRatingReviewCount" itemprop="reviewCount"> {{ count }}
<template v-if="count > 1">
    Reviews
</template>
<template v-else>
    Review
</template></a>
        </div>

        <h2>{{ count }} <template v-if="count > 1">Reviews</template><template v-else>Review</template> </h2>
        <template v-for="(review, index) of Reviews">
            <div class="review-list-inner">
                <div>
                    <span>{{ index }}.</span>
                    <img class="sfcommentAuthorAvatar" src="/assets/dist/images/default_user.png" />
                    <span>{{ review.Name }}</span> | <span><i>{{ formatDate(review.CreatedOn) }}</i></span>
                </div>
                <show-rating :rating="review.Rating"></show-rating>
                <div>{{ review.Comments }}</div>
            </div>
        </template>
    </template>
</div>