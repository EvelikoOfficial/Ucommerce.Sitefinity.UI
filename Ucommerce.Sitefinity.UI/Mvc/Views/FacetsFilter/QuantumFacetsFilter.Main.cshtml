@model  IList<Ucommerce.Sitefinity.UI.Mvc.ViewModels.FacetViewModel>

    @using Newtonsoft.Json;
    @using Telerik.Sitefinity.Services
    @using Telerik.Sitefinity.Frontend.Mvc.Helpers

    @if (!SystemManager.IsDesignMode)
    {
        @Html.Script(Url.WidgetContent("assets/build/js/vendor.bundle.js"), "bottom", false)
        @Html.Script(Url.WidgetContent("assets/build/js/main.js"), "bottom", false)
    }

    <div data-component="facet-selector" id="@Html.UniqueId("facetFilter")">
        <script type="application/json" data-facets="true">
            { "facets" : @Html.Raw(JsonConvert.SerializeObject(Model)) }
        </script>
        <h2 class="sffilterTitle">
            Filter products
        </h2>
        <a class="sffilterClearLnk" v-on:click="clearFilters">Clear filter</a>

        <ul class="sfShopByFilterGroupList sfVerticalList" v-cloak>
            <li class="sfShopByFilterGroupListItem" v-for="facet in facets" v-bind:key="facet.DisplayName">
                <h3 class="sfGroupTitle">by {{ facet.DisplayName }}</h3>
                <ul class="sfShopByFilterList">
                    <li class="sfShopByFilterListItem" v-for="filter in facet.FacetValues" v-bind:style="filter.FacetValueHits == 0 && {'opacity' : 0.5}">
                        <label class="cb-wrap" v-bind:class="filter.Checked && 'active'">
                            <input type="checkbox" class="js-facets sfFilterItem" v-model="filter.Checked" v-on:change="filterProducts(filter)" v-bind:key="filter.FacetValueName" />
                            <span class="checkmark"></span>
                            {{ filter.FacetValueName }}
                        </label>
                        <span class="filter-count"> ({{ filter.FacetValueHits }})</span>
                    </li>
                </ul>
            </li>
        </ul>
    </div>

    <style>
        [v-cloak] {
            display: none
        }
    </style>
    <style>
        .sfShopByFilterListItem {
            background: 0 0;
            padding: 0 0 0 25px;
            color: #888;
            position: relative;
        }

            .sfShopByFilterListItem:hover {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }

        .cb-wrap {
            font-weight: normal;
        }

            .cb-wrap:hover {
                cursor: pointer;
            }

        .js-facets {
            display: none;
        }

        .cb-wrap:before {
            width: 14px;
            height: 14px;
            display: block;
            left: 0;
            top: 2px;
            position: absolute;
            content: "";
            border-radius: 2px;
            border: 1px solid #fff;
            background: #eee;
        }

        .cb-wrap.active {
            font-weight: 700;
            color: #444;
        }

            .cb-wrap.active:before {
                background: #3aa4bf;
            }

        .cb-wrap:hover:before {
            border: 1px solid #ccc;
        }

        h2.sffilterTitle {
            line-height: 1.1;
            font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
        }

        a.sffilterClearLnk {
            font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
        }

        ul.sfShopByFilterGroupList {
            font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
            color: #333;
            margin-bottom: 20px;
        }
    </style>
